{"version":3,"sources":["promisify.ts"],"names":[],"mappings":";;AACA,mBAAsC,EAAY,EAAE,KAAiB;IAAjB,sBAAA,EAAA,YAAiB;IACpE,MAAM,CAAC;QAAU,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,yBAAO;;QACvB,MAAM,CAAC,IAAI,OAAO,CAAK,UAAW,OAAiB,EAAE,MAAgB;YACpE,+DAA+D;YAC/D,IAAI,CAAC,IAAI,CAAE,UAAU,GAAW,EAAE,GAAQ;gBACzC,gEAAgE;gBAChE,EAAE,CAAC,CAAE,GAAI,CAAC,CAAC,CAAC;oBACX,MAAM,CAAE,GAAG,CAAE,CAAC;gBACf,CAAC;gBACD,IAAI,CAAC,CAAC;oBACL,OAAO,CAAE,GAAG,CAAE,CAAC;gBAChB,CAAC;YACF,CAAC,CAAE,CAAC;YAEJ,EAAE,CAAC,KAAK,CAAE,KAAK,IAAI,EAAE,EAAE,IAAI,CAAE,CAAC;QAC/B,CAAC,CAAE,CAAC;IACL,CAAC,CAAC;AACH,CAAC;AAjBD,4BAiBC;AAAA,CAAC","file":"promisify.js","sourcesContent":["\nexport default function promisify<T>( fn: Function, scope: any = null ): Function {\n\treturn function (...args): Promise<T> {\n\t\treturn new Promise<T>( function ( resolve: Function, reject: Function ) {\n\t\t\t// Assume the callback handler goes at the end of the arguments\n\t\t\targs.push( function( err: Object, val: any ) {\n\t\t\t\t// Assume that err is the first argument and value is the second\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresolve( val );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tfn.apply( scope || fn, args );\n\t\t} );\n\t};\n};\n"]}