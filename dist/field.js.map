{"version":3,"sources":["field.ts"],"names":[],"mappings":"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","file":"field.js","sourcesContent":["import knex from 'knex';\n\nimport Editor from './editor';\nimport {IFormatter} from './formatters';\nimport NestedData from './nestedData';\nimport Options, {CustomOptions, IOption} from './options';\nimport Upload from './upload';\nimport Validator, {IValidator} from './validators';\nimport xss, {Ixss} from './xss';\n\nexport enum SetType {\n    None,\n    Both,\n    Create,\n    Edit\n};\n\nexport default class Field extends NestedData {\n    private _dbField: string;\n    private _get: boolean = true;\n    private _getFormatter: IFormatter;\n    private _getValue: any;\n    private _opts: Options & CustomOptions;\n    private _name: string;\n    private _set: SetType = SetType.Both;\n    private _setFormatter: IFormatter;\n    private _setValue: any;\n    private _validator: IValidator[] = [];\n    private _upload: Upload;\n    private _xss: Ixss;\n    private _xssFormat: boolean = true;\n\n\n    constructor( dbField: string=null, name:string=null ) {\n        super();\n\n        if ( ! name && dbField ) {\n            // Standard usage, a single parameter\n            this\n                .name( dbField )\n                .dbField( dbField );\n        }\n        else {\n            this\n                .name( name )\n                .dbField( dbField );\n        }\n    }\n\n    public dbField (): string;\n    public dbField (dbField: string): Field;\n    public dbField (dbField?: string): any {\n        if ( dbField === undefined ) {\n            return this._dbField;\n        }\n\n        this._dbField = dbField;\n        return this;\n    }\n\n    public get (): boolean;\n    public get (flag: boolean): Field;\n    public get (flag?: boolean): any {\n        if ( flag === undefined ) {\n            return this._get;\n        }\n\n        this._get = flag;\n        return this;\n    }\n\n    public getFormatter (): IFormatter;\n    public getFormatter (formatter: IFormatter): Field;\n    public getFormatter (formatter?: IFormatter): any {\n        if ( formatter === undefined ) {\n            return this._getFormatter;\n        }\n\n        this._getFormatter = formatter;\n        return this;\n    }\n\n    public getValue (): any;\n    public getValue (val: any): Field;\n    public getValue (val?: any): any {\n        if ( val === undefined ) {\n            return this._getValue;\n        }\n\n        this._getValue = val;\n        return this;\n    }\n\n    public name (): string;\n    public name (name: string): Field;\n    public name (name?: string): any {\n        if ( name === undefined ) {\n            return this._name;\n        }\n\n        this._name = name;\n        return this;\n    }\n\n\n    public options (): Options & CustomOptions;\n    public options (opts: Options & CustomOptions): Field;\n    public options (opts?: Options & CustomOptions): any {\n        if ( opts === undefined ) {\n            return this._opts;\n        }\n\n        this._opts = opts;\n        return this;\n    }\n\n\n    public set (): SetType;\n    public set (flag: boolean|SetType): Field;\n    public set (flag?: boolean): any {\n        if ( flag === undefined ) {\n            return this._set;\n        }\n\n        if ( flag === true ) {\n            this._set = SetType.Both;\n        }\n        else if ( flag === false ) {\n            this._set = SetType.None;\n        }\n        else {\n            this._set = flag;\n        }\n\n        return this;\n    }\n\n    public setFormatter (): IFormatter;\n    public setFormatter (formatter: IFormatter): Field;\n    public setFormatter (formatter?: IFormatter): any {\n        if ( formatter === undefined ) {\n            return this._setFormatter;\n        }\n\n        this._setFormatter = formatter;\n        return this;\n    }\n\n    public setValue (): any;\n    public setValue (val: any): Field;\n    public setValue (val?: any): any {\n        if ( val === undefined ) {\n            return this._setValue;\n        }\n\n        this._setValue = val;\n        return this;\n    }\n\n    public upload (): Upload;\n    public upload (upload: Upload): Field;\n    public upload (upload?: Upload): any {\n        if ( upload === undefined ) {\n            return this._upload;\n        }\n\n        this._upload = upload;\n        return this;\n    }\n\n    public validator (): any;\n    public validator (validator: IValidator): Field;\n    public validator (validator?: IValidator): any {\n        if ( validator === undefined ) {\n            return this._validator;\n        }\n\n        this._validator.push( validator );\n        return this;\n    }\n\n    public xss (): any;\n    public xss (flag: boolean|Ixss): Field;\n    public xss (flag?: boolean|Ixss): any {\n        if ( flag === undefined ) {\n            return this._xss;\n        }\n\n        if ( flag === true ) {\n            this._xss = xss;\n        }\n        else if ( flag === false ) {\n            this._xss = null;\n        }\n        else {\n            this._xss = flag;\n        }\n\n        return this;\n    }\n\n    \n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Internal methods\n\t * Used by the Editor class and not generally for public use\n\t */\n    public apply( action: 'get'|'create'|'edit', data?: object ): boolean {\n        if ( action === 'get' ) {\n            return this._get;\n        }\n\n        if ( action === 'create' && (this._set === SetType.None || this._set === SetType.Edit)) {\n            return false;\n        }\n        else if ( action === 'edit' && (this._set === SetType.None || this._set === SetType.Create)) {\n            return false;\n        }\n\n        // Check it was in the submitted data\n        if ( this._setValue === undefined && ! this._propExists( this.name(), data ) ) {\n            return false;\n        }\n\n        // In the data set, so use it\n        return true;\n    }\n\n\n    public async optionsExec ( db: knex ): Promise<false|IOption[]> {\n        if ( this._opts instanceof Options ) {\n            return await this._opts.exec( db );\n        }\n        else if ( this._opts ) {\n            return await this._opts( db );\n        }\n        return false;\n    }\n\n\n    public val( direction: 'get'|'set', data: object ): any {\n        let val;\n\n        if ( direction === 'get' ) {\n            if ( this._getValue !== undefined ) {\n                val = typeof this._getValue === 'function' ?\n                    this._getValue() :\n                    this._getValue;\n            }\n            else {\n                // Getting data, so db field name\n                val = data[ this._dbField ] !== undefined ?\n                    data[ this._dbField ] :\n                    null;\n            }\n\n            return this._format( val, data, this._getFormatter );\n        }\n        \n        // set - using from the payload, and thus use `name`\n        if ( this._setValue !== undefined ) {\n            val = typeof this._setValue === 'function' ?\n                this._setValue() :\n                this._setValue;\n        }\n        else {\n            val = this._readProp( this._name, data );\n        }\n\n        return this._format( val, data, this._setFormatter );\n    }\n\n    public async validate ( data: object, editor: Editor, id: string=null ): Promise<true|string> {\n        if ( this._validator.length === 0 ) {\n            return true;\n        }\n        \n        let val = this._readProp( this.name(), data );\n        let host = new Validator.Host( {\n            action: editor.inData()['action'],\n            id,\n            field: this,\n            editor,\n            db: editor.db()\n        } );\n\n        for ( let i=0, ien=this._validator.length ; i<ien ; i++ ) {\n            let validator = this._validator[i];\n            let res = await validator( val, data, host );\n\n            if ( res !== true ) {\n                return res;\n            }\n        }\n\n        // Calidation methods all run, must be value\n        return true;\n    }\n    \n    public write( out: object, srcData: object ): void {\n        this._writeProp( out, this.name(), this.val('get', srcData) );\n    }\n\n    public xssSafety ( val: any ) {\n        if ( ! this._xss ) {\n            return val;\n        }\n\n        if ( Array.isArray( val ) ) {\n            let out = [];\n\n            for ( let i=0, ien=val.length ; i<ien ; i++ ) {\n                out.push( this._xss( val[i] ) );\n            }\n\n            return out;\n        }\n\n        return this._xss( val );\n    }\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n    private _format( val: any, data: object, formatter: IFormatter ): any {\n        return formatter ?\n            formatter( val, data ) :\n            val;\n    }\n}\n\n"]}