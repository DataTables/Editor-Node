{"version":3,"sources":["mjoin.ts"],"names":[],"mappings":"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","file":"mjoin.js","sourcesContent":["import * as knex from 'knex';\n\nimport Editor, {IDtRequest, IDtResponse} from './editor';\nimport Field from './field';\nimport NestedData from './nestedData';\n\ninterface IJoinTable {\n\ttable?: string;\n\tparent: string|string[];\n\tchild: string|string[];\n}\n\n/**\n * The MJoin class provides a one-to-many join link for Editor. This can\n * be useful in cases were an attribute can take multiple values at the\n * same time - for example cumulative security access levels.\n *\n * Typically the MJoin class should be used with a link table, but this is\n * optional. Please note that if you don't use a link table you should be\n * aware that on edit the linked rows are deleted and then reinserted, thus\n * if any values should be retained they should also be submitted.\n *\n * Please refer to the Editor Node documentation for further information\n * https://editor.datatables.net/manual/node\n *\n * @export\n * @class Mjoin\n * @extends {NestedData}\n */\nexport default class Mjoin extends NestedData {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t* Private parameters\n\t*/\n\n\tprivate _table: string;\n\tprivate _editor: Editor;\n\tprivate _name: string;\n\tprivate _get: boolean = true;\n\tprivate _set: boolean = true;\n\tprivate _where: any[] = [];\n\tprivate _fields: Field[] = [];\n\tprivate _links: string[] = [];\n\tprivate _order: string;\n\tprivate _join: IJoinTable = {\n\t\tchild: '',\n\t\tparent: ''\n\t};\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Creates an instance of Mjoin.\n\t *\n\t * @param {string} table Table name being joined to\n\t */\n\tconstructor( table: string ) {\n\t\tsuper();\n\n\t\tthis.table( table );\n\t\tthis.name( table );\n\t}\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Public methods\n\t */\n\n\t/**\n\t * Get or field by name, or add a field instance.\n\t *\n\t * @param {(Field|string)} nameOrField Field instance to add, or field name to get\n\t * @returns Mjoin instance if adding a field, Field instance if getting a field.\n\t */\n\tpublic field( nameOrField: Field|string ) {\n\t\tif ( typeof nameOrField === 'string' ) {\n\t\t\tfor ( let i = 0, ien = this._fields.length ; i < ien ; i++ ) {\n\t\t\t\tif ( this._fields[i].name() === nameOrField ) {\n\t\t\t\t\treturn this._fields[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow new Error( 'Unknown field: ' + nameOrField );\n\t\t}\n\n\t\tthis._fields.push( nameOrField );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the fields assigned to this instance.\n\t * @returns {Field[]} Array of fields\n\t */\n\tpublic fields(): Field[];\n\t/**\n\t * Add one or more fields to the instance.\n\t * @param {...Field[]} fields Fields to add\n\t * @returns {Mjoin} Self for chaining\n\t */\n\tpublic fields(...fields: Field[]): Mjoin;\n\tpublic fields(...fields: Field[]): any {\n\t\tif ( fields === undefined || fields.length === 0 ) {\n\t\t\treturn this._fields;\n\t\t}\n\n\t\tthis._fields.push.apply( this._fields, fields );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the `get` flag for all fields in the Mjoin instance.\n\t *\n\t * @returns {boolean} True if gettable, false otherwise.\n\t */\n\tpublic get(): boolean;\n\t/**\n\t * Set the `get` flag for all fields in the Mjoin instance.\n\t * When set to false no read operations will occur on the join tables.\n\t *\n\t * @param {boolean} flag `true` to mark as readable, false otherwise\n\t * @returns {Mjoin} Self for chaining\n\t */\n\tpublic get(flag: boolean): Mjoin;\n\tpublic get(flag?: boolean): any {\n\t\tif ( flag === undefined ) {\n\t\t\treturn this._get;\n\t\t}\n\n\t\tthis._get = flag;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Create a join link between two tables. The order of the fields does not\n\t * matter, but each field must contain the table name as well as the field\n\t * name.\n\t *\n\t * This method can be called a maximum of two times for an Mjoin instance:\n\t *\n\t * * First time, creates a link between the Editor host table and a join\n\t *   table\n\t * * Second time creates the links required for a link table.\n\t *\n\t * Please refer to the Editor Mjoin documentation for further details:\n\t * https://editor.datatables.net/manual/php\n\t *\n\t * @param {string} field1 Table and field name\n\t * @param {string} field2 Table and field name\n\t * @returns {Mjoin} Self for chaining\n\t */\n\tpublic link( field1: string, field2: string ): Mjoin {\n\t\tif ( field1.indexOf('.') === -1 || field2.indexOf('.') === -1 ) {\n\t\t\tthrow new Error( 'Mjoin fields must contain both the table name and the column name' );\n\t\t}\n\n\t\tif ( this._links.length === 4 ) {\n\t\t\tthrow new Error( 'Mjoin link method cannot be called more than twice for a single instance' );\n\t\t}\n\n\t\t// Add to list - it is resolved later on\n\t\tthis._links.push( field1 );\n\t\tthis._links.push( field2 );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the instance's configured name.\n\t *\n\t * The `name` of the Join is the JSON property key that is used when\n\t * 'getting' the data, and the HTTP property key (in a JSON style) when\n\t * 'setting' data. Typically the name of the db table will be used here,\n\t * but this method allows that to be overridden.\n\t *\n\t * @returns {string} Current name.\n\t */\n\tpublic name(): string;\n\t/**\n\t * Set the instance's name\n\t *\n\t * @param {string} name Name to set\n\t * @returns {Mjoin} Self for chaining\n\t */\n\tpublic name(name: string): Mjoin;\n\tpublic name(name?: string): any {\n\t\tif ( name === undefined ) {\n\t\t\treturn this._name;\n\t\t}\n\n\t\tthis._name = name;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the column name to order the data by\n\t *\n\t * @returns {string} SQL column name\n\t */\n\tpublic order(): string;\n\t/**\n\t * Specify the property that the data will be sorted by.\n\t *\n\t * @param {string} order SQL column name to order the data by\n\t * @returns {Mjoin} Self for chaining\n\t */\n\tpublic order(order: string): Mjoin;\n\tpublic order(order?: string): any {\n\t\tif ( order === undefined ) {\n\t\t\treturn this._order;\n\t\t}\n\n\t\tthis._order = order;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the current `set` property for the instance.\n\t *\n\t * When set to false no write operations will occur on the join tables.\n\t * This can be useful when you want to display information which is joined,\n\t * but want to only perform write operations on the parent table.\n\t *\n\t * @returns {boolean} Set configuration\n\t */\n\tpublic set(): boolean;\n\t/**\n\t * Set the instance's set property\n\t *\n\t * @param {(boolean)} flag Set flag.\n\t * @returns {Mjoin} Self for chaining.\n\t */\n\tpublic set(flag: boolean): Mjoin;\n\tpublic set(flag?: boolean): any {\n\t\tif ( flag === undefined ) {\n\t\t\treturn this._set;\n\t\t}\n\n\t\tthis._set = flag;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get join table name.\n\t *\n\t * Please note that this will also set the {@link name} used by the Join\n\t * as well. This is for convenience as the JSON output / HTTP input will\n\t * typically use the same name as the database name. If you want to set a\n\t * custom name, the {@link name} method must be called ***after*** this one.\n\t *\n\t * @returns {string} Join table name\n\t */\n\tpublic table(): string;\n\t/**\n\t * Set column join name\n\t *\n\t * @param {string} table Join table name\n\t * @returns {Mjoin} Self for chaining\n\t */\n\tpublic table(table: string): Mjoin;\n\tpublic table(table?: string): any {\n\t\tif ( table === undefined ) {\n\t\t\treturn this._table;\n\t\t}\n\n\t\tthis._table = table;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Get the array of conditions applied to the method.\n\t *\n\t * @returns {any[]} Knex where conditions.\n\t */\n\tpublic where(): any[];\n\t/**\n\t * Where condition to add to the query used to get data from the database.\n\t * Note that this is applied to the child table.\n\t *\n\t * @param {*} cond Knex query condition\n\t * @returns {Mjoin} Self for chaining.\n\t */\n\tpublic where(cond: any): Mjoin;\n\tpublic where(cond?: any): any {\n\t\tif ( cond === undefined ) {\n\t\t\treturn this._where;\n\t\t}\n\n\t\tthis._where.push( cond );\n\n\t\treturn this;\n\t}\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Internal methods\n\t */\n\n\t/**\n\t * @ignore\n\t */\n\tpublic async data( editor: Editor, response: IDtResponse ): Promise<void> {\n\t\tif ( ! this._get ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._prepare( editor );\n\t\tlet fields = this.fields();\n\t\tlet join = this._join;\n\n\t\t// This is something that will likely come in a future version, but it\n\t\t// is a relatively low use feature. Please get in touch if this is\n\t\t// something you require.\n\t\tif ( editor.pkey().length > 1 ) {\n\t\t\tthrow new Error( 'Mjoin is not currently supported with a compound primary key for the main table' );\n\t\t}\n\n\t\t// If the Editor primary key is join key, then it is read automatically\n\t\t// and into Editor's primary key store\n\t\tlet dteTable = editor.table()[0];\n\t\tlet joinField = join.table ?\n\t\t\tjoin.parent[0] :\n\t\t\tjoin.parent;\n\n\t\tlet pkeyIsJoin = joinField === editor.pkey()[0] ||\n\t\t\tdteTable + '.' + joinField === editor.pkey()[0];\n\n\t\t// Build the basic query\n\t\tlet query = editor.db()( dteTable )\n\t\t\t.distinct( dteTable + '.' + joinField + ' as dteditor_pkey' );\n\n\t\tlet order = this.order();\n\t\tif ( order ) {\n\t\t\tlet a = order.split( ' ' );\n\n\t\t\tif ( a.length > 1 ) {\n\t\t\t\tquery.orderBy( a[0], a[1] );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tquery.orderBy( a );\n\t\t\t}\n\t\t}\n\n\t\tthis._applyWhere( query );\n\n\t\tfor ( let i = 0, ien = fields.length ; i < ien ; i++ ) {\n\t\t\tlet field = fields[i];\n\n\t\t\tif ( field.apply('get') && field.getValue() === undefined ) {\n\t\t\t\tlet dbField = field.dbField();\n\n\t\t\t\tif (dbField.indexOf('(') !== -1 ) {\n\t\t\t\t\tquery.select( editor.db().raw( dbField + ' as \"' + dbField + '\"' ) );\n\t\t\t\t}\n\t\t\t\telse if ( dbField.indexOf('.') === -1 ) {\n\t\t\t\t\tquery.select( this._table + '.' + dbField + ' as ' + dbField );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tquery.select( dbField );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Create the joins\n\t\tif ( join.table ) {\n\t\t\tquery.rightJoin( join.table, dteTable + '.' + join.parent[0], '=', join.table + '.' + join.parent[1] );\n\t\t\tquery.rightJoin( this._table, this._table + '.' + join.child[0], '=', join.table + '.' + join.child[1] );\n\t\t}\n\t\telse {\n\t\t\tquery.rightJoin( this._table, join.parent, '=', join.child );\n\t\t}\n\n\t\tlet res = await query;\n\t\tlet readField = '';\n\n\t\tif ( this._propExists( dteTable + '.' + joinField, response.data[0] ) ) {\n\t\t\treadField = dteTable + '.' + joinField;\n\t\t}\n\t\telse if ( this._propExists( joinField.toString(), response.data[0] ) ) {\n\t\t\treadField = joinField.toString();\n\t\t}\n\t\telse if ( !pkeyIsJoin ) {\n\t\t\tthrow new Error(\n\t\t\t\t'Join was performed on the field \"' + joinField + '\" which was not ' +\n\t\t\t\t'included in the Editor field list. The join field must be ' +\n\t\t\t\t'included as a regular field in the Editor instance.'\n\t\t\t);\n\t\t}\n\n\t\t// Map the data to the primary key for fast loop up\n\t\tlet joinMap = {};\n\n\t\tfor ( let i = 0, ien = res.length ; i < ien ; i++ ) {\n\t\t\tlet inner = {};\n\n\t\t\tfor ( let j = 0, jen = fields.length ; j < jen ; j++ ) {\n\t\t\t\tfields[j].write( inner, res[i] );\n\t\t\t}\n\n\t\t\tlet lookup = res[i].dteditor_pkey;\n\n\t\t\tif ( ! joinMap[ lookup ] ) {\n\t\t\t\tjoinMap[ lookup ] = [];\n\t\t\t}\n\n\t\t\tjoinMap[ lookup ].push( inner );\n\t\t}\n\n\t\t// Loop over the data in the original response and do a join based on\n\t\t// the mapped data\n\t\tfor ( let i = 0, ien = response.data.length ; i < ien ; i++ ) {\n\t\t\tlet data = response.data[i];\n\t\t\tlet linkField = pkeyIsJoin ?\n\t\t\t\t(data as any).DT_RowId.replace( editor.idPrefix(), '' ) :\n\t\t\t\tthis._readProp( readField, data );\n\n\t\t\tif ( joinMap[ linkField ] ) {\n\t\t\t\tdata[ this._name ] = joinMap[ linkField ];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdata[ this._name ] = [];\n\t\t\t}\n\t\t}\n\n\t\t// Field options\n\t\tfor ( let i = 0, ien = fields.length ; i < ien ; i++ ) {\n\t\t\tlet opts = await fields[i].optionsExec( editor.db() );\n\n\t\t\tif ( opts ) {\n\t\t\t\tlet name = this.name() + '[].' + fields[i].name();\n\n\t\t\t\tresponse.options[ name ] = opts;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic async create( editor: Editor, parentId: string, data: object ): Promise<void> {\n\t\t// If not settable, or the many count for the join was not submitted\n\t\t// then we do nothing\n\t\tif (\n\t\t\t! this._set ||\n\t\t\t! data[ this._name ] ||\n\t\t\t! data[ this._name + '-many-count']\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._prepare( editor );\n\t\tlet db = editor.db();\n\n\t\tfor ( let i = 0, ien = data[ this._name ].length ; i < ien ; i++ ) {\n\t\t\tawait this._insert( db, parentId, data[ this._name ][i] );\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic async update( editor: Editor, parentId: string, data: object ): Promise<void> {\n\t\tif ( ! this._set || ! data[ this._name + '-many-count'] ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// WARNING - this will remove rows and then readd them. Any\n\t\t// data not in the field list WILL BE LOST\n\t\tawait this.remove( editor, [parentId] );\n\t\tawait this.create( editor, parentId, data );\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic async remove( editor: Editor, ids: string[] ): Promise<void> {\n\t\tif ( ! this._set ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._prepare( editor );\n\t\tlet db = editor.db();\n\t\tlet join = this._join;\n\n\t\tif ( join.table ) {\n\t\t\tlet query = db( join.table );\n\n\t\t\tfor ( let i = 0, ien = ids.length ; i < ien ; i++ ) {\n\t\t\t\tquery.orWhere( { [join.parent[1]]: ids[i] } );\n\t\t\t}\n\n\t\t\tawait query.del();\n\t\t}\n\t\telse {\n\t\t\tlet query = db( this._table );\n\n\t\t\tquery.where( function() {\n\t\t\t\tfor ( let i = 0, ien = ids.length ; i < ien ; i++ ) {\n\t\t\t\t\tquery.orWhere( { [join.child.toString()]: ids[i] } );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis._applyWhere( query );\n\n\t\t\tawait query.del();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic async validate( errors, editor: Editor, data: object ): Promise<void> {\n\t\tif ( ! this._set || ! data[ this._name ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._prepare( editor );\n\t\tlet joinData = data[ this._name ];\n\n\t\tfor ( let i = 0, ien = joinData.length ; i < ien ; i++ ) {\n\t\t\tawait this._validateFields( errors, editor, joinData[i], this._name + '[].' );\n\t\t}\n\t}\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\tprivate _applyWhere( query: knex ): void {\n\t\tlet where = this._where;\n\n\t\tfor ( let i = 0, ien = where.length ; i < ien ; i++ ) {\n\t\t\tquery.where( where[i] );\n\t\t}\n\t}\n\n\tprivate async _insert( db: knex, parentId: string, data: object ): Promise<void> {\n\t\tlet join = this._join;\n\t\tlet fields = this.fields();\n\n\t\tif ( join.table ) {\n\t\t\t// Insert keys into the join table\n\t\t\tawait db( join.table )\n\t\t\t\t.insert( {\n\t\t\t\t\t[join.parent[1]]: parentId,\n\t\t\t\t\t[join.child[1]]: data[ join.child[0] ]\n\t\t\t\t} );\n\t\t}\n\t\telse {\n\t\t\t// Insert values into the target table\n\t\t\tlet set = {\n\t\t\t\t[join.child.toString()]: parentId\n\t\t\t};\n\n\t\t\tfor ( let i = 0, ien = fields.length ; i < ien ; i++ ) {\n\t\t\t\tlet field = fields[i];\n\n\t\t\t\tif ( field.apply('create', data) ) {\n\t\t\t\t\tset[ field.dbField() ] = field.val( 'set', data );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait db( this._table )\n\t\t\t\t.insert( set );\n\t\t}\n\t}\n\n\tprivate _prepare( editor: Editor ): void {\n\t\tthis._editor = editor;\n\n\t\tlet links = this._links;\n\t\tlet editorTable = editor.table()[0];\n\t\tlet joinTable = this.table();\n\n\t\t// FUTURE aliasParentTable\n\n\t\tif ( links.length === 2 ) {\n\t\t\t// No link table\n\t\t\tlet f1 = links[0].split('.');\n\t\t\tlet f2 = links[1].split('.');\n\n\t\t\tif ( f1[0] === editorTable ) {\n\t\t\t\tthis._join.parent = f1[1];\n\t\t\t\tthis._join.child = f2[1];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._join.parent = f2[1];\n\t\t\t\tthis._join.child = f1[1];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Link table\n\t\t\tlet f1 = links[0].split('.');\n\t\t\tlet f2 = links[1].split('.');\n\t\t\tlet f3 = links[2].split('.');\n\t\t\tlet f4 = links[3].split('.');\n\n\t\t\t// Discover the name of the link table\n\t\t\tif ( f1[0] !== editorTable && f1[0] !== joinTable ) {\n\t\t\t\tthis._join.table = f1[0];\n\t\t\t}\n\t\t\telse if ( f2[0] !== editorTable && f2[0] !== joinTable ) {\n\t\t\t\tthis._join.table = f2[0];\n\t\t\t}\n\t\t\telse if ( f3[0] !== editorTable && f3[0] !== joinTable ) {\n\t\t\t\tthis._join.table = f3[0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._join.table = f4[0];\n\t\t\t}\n\n\t\t\tthis._join.parent = [ f1[1], f2[1] ];\n\t\t\tthis._join.child = [ f3[1], f4[1] ];\n\t\t}\n\t}\n\n\tprivate async _validateFields( errors, editor: Editor, data: object, prefix: string ): Promise<void> {\n\t\tlet fields = this.fields();\n\n\t\tfor ( let i = 0, ien = fields.length ; i < ien ; i++ ) {\n\t\t\tlet field = fields[i];\n\t\t\tlet validation = await field.validate( data, editor );\n\n\t\t\tif ( validation !== true ) {\n\t\t\t\terrors.push( {\n\t\t\t\t\tname: prefix + field.name(),\n\t\t\t\t\tstatus: validation\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n}\n"]}