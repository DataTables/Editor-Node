{"version":3,"sources":["mjoin.ts"],"names":[],"mappings":"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","file":"mjoin.js","sourcesContent":["import * as knex from 'knex';\n\nimport Editor, {IDtRequest, IDtResponse} from './editor';\nimport Field from './field';\nimport NestedData from './nestedData';\n\ninterface JoinTable {\n    table?: string;\n    parent: string|string[];\n    child: string|string[];\n}\n\nexport default class Mjoin extends NestedData {\n    constructor( table: string ) {\n        super();\n\n        this.table( table );\n        this.name( table );\n    }\n\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Private parameters\n     */\n\n    private _table: string;\n    private _editor: Editor;\n    private _name: string;\n    private _get: boolean = true;\n    private _set: boolean = true;\n    private _where: any[] = [];\n    private _fields: Field[] = [];\n    private _links: string[] = [];\n    private _order: string;\n    private _join: JoinTable = {\n        parent: '',\n        child: ''\n    };\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Public methods\n     */\n    public field ( nameOrField: Field|string ) {\n        if ( typeof nameOrField === 'string' ) {\n            for ( let i=0, ien=this._fields.length ; i<ien ; i++ ) {\n                if ( this._fields[i].name() === nameOrField ) {\n                    return this._fields[i];\n                }\n            }\n\n            throw new Error( 'Unknown field: '+nameOrField );\n        }\n\n        this._fields.push( nameOrField );\n        return this;\n    }\n\n\n    public fields (): Field[];\n    public fields (...fields: Field[]): Mjoin;\n    public fields (...fields: Field[]): any {\n        if ( fields === undefined || fields.length === 0 ) {\n            return this._fields;\n        }\n\n        this._fields.push.apply( this._fields, fields );\n        \n        return this;\n    }\n\n    public get (): boolean;\n    public get (flag: boolean): Mjoin;\n    public get (flag?: boolean): any {\n        if ( flag === undefined ) {\n            return this._get;\n        }\n\n        this._get = flag;\n        return this;\n    }\n\n    public link( field1: string, field2: string ): Mjoin {\n        if ( field1.indexOf('.') === -1 || field2.indexOf('.') === -1 ) {\n            throw new Error( 'Mjoin fields must contain both the table name and the column name' );\n        }\n\n        if ( this._links.length === 4 ) {\n            throw new Error( 'Mjoin link method cannot be called more than twice for a single instance' );\n        }\n\n        // Add to list - it is resolved later on\n        this._links.push( field1 );\n        this._links.push( field2 );\n\n        return this;\n    }\n\n    public name (): string;\n    public name (name: string): Mjoin;\n    public name (name?: string): any {\n        if ( name === undefined ) {\n            return this._name;\n        }\n\n        this._name = name;\n        return this;\n    }\n\n    public order (): string;\n    public order (order: string): Mjoin;\n    public order (order?: string): any {\n        if ( order === undefined ) {\n            return this._order;\n        }\n\n        this._order = order;\n        return this;\n    }\n\n    public set (): boolean;\n    public set (flag: boolean): Mjoin;\n    public set (flag?: boolean): any {\n        if ( flag === undefined ) {\n            return this._set;\n        }\n\n        this._set = flag;\n        return this;\n    }\n\n    public table (): string;\n    public table (table: string): Mjoin;\n    public table (table?: string): any {\n        if ( table === undefined ) {\n            return this._table;\n        }\n\n        this._table = table;\n        return this;\n    }\n\n    public where (): any[];\n    public where (cond: any): Mjoin;\n    public where (cond?: any): any {\n        if ( cond === undefined ) {\n            return this._where;\n        }\n\n        this._where.push( cond );\n        \n        return this;\n    }\n\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Internal methods\n     */\n    public async data ( editor: Editor, response: IDtResponse ): Promise<void> {\n        if ( ! this._get ) {\n            return;\n        }\n\n        this._prepare( editor );\n        let fields = this.fields();\n        let join = this._join;\n\n        // This is something that will likely come in a future version, but it\n        // is a relatively low use feature. Please get in touch if this is\n        // something you require.\n        if ( editor.pkey().length > 1 ) {\n            throw new Error( 'Mjoin is not currently supported with a compound primary key for the main table' );\n        }\n\n        // If the Editor primary key is join key, then it is read automatically\n        // and into Editor's primary key store\n        let dteTable = editor.table()[0];\n        let joinField = join.table ?\n            join.parent[0] :\n            join.parent;\n\n        let pkeyIsJoin = joinField === editor.pkey()[0] ||\n                         dteTable+'.'+joinField === editor.pkey()[0];\n        \n        // Build the basic query\n        let query = editor.db()( dteTable )\n            .distinct( dteTable+'.'+joinField + ' as dteditor_pkey' );\n        \n        let order = this.order();\n        if ( order ) {\n            let a = order.split( ' ' );\n\n            if ( a.length > 1 ) {\n                query.orderBy( a[0], a[1] );\n            }\n            else {\n                query.orderBy( a );\n            }\n        }\n\n        this._applyWhere( query );\n\n        for ( let i=0, ien=fields.length ; i<ien ; i++ ) {\n            let field = fields[i];\n\n            if ( field.apply('get') && field.getValue() === undefined ) {\n                let dbField = field.dbField();\n\n                if ( dbField.indexOf('.') === -1 ) {\n                    query.select( this._table +'.'+ dbField +' as '+ dbField );\n                }\n                else {\n                    query.select( dbField );\n                }\n            }\n        }\n\n        // Create the joins\n        if ( join.table ) {\n            query.leftJoin( join.table, dteTable+'.'+join.parent[0], '=', join.table+'.'+join.parent[1] );\n            query.leftJoin( this._table, this._table+'.'+join.child[0], '=', join.table+'.'+join.child[1] );\n        }\n        else {\n            query.leftJoin( this._table, join.parent, '=', join.child );\n        }\n\n        let res = await query;\n\n        if ( res.length ) {\n            let readField = '';\n\n            if ( this._propExists( dteTable+'.'+joinField, response.data[0] ) ) {\n                readField = dteTable+'.'+joinField;\n            }\n            else if ( this._propExists( joinField.toString(), response.data[0] ) ) {\n                readField = joinField.toString();\n            }\n            else if ( !pkeyIsJoin ) {\n                throw new Error(\n                    \"Join was performed on the field '\" + joinField + \"' which was not \" +\n                    \"included in the Editor field list. The join field must be \" +\n                    \"included as a regular field in the Editor instance.\"\n                );\n            }\n\n            // Map the data to the primary key for fast loop up\n            let joinMap = {};\n\n            for ( let i=0, ien=res.length ; i<ien ; i++ ) {\n                let inner = {};\n\n                for( let j=0, jen=fields.length ; j<jen ; j++ ) {\n                    fields[j].write( inner, res[i] );\n                }\n\n                let lookup = res[i]['dteditor_pkey'];\n                \n                if ( ! joinMap[ lookup ] ) {\n                    joinMap[ lookup ] = [];\n                }\n\n                joinMap[ lookup ].push( inner );\n            }\n\n            // Loop over the data in the original response and do a join based on\n            // the mapped data\n            for ( let i=0, ien=response.data.length ; i<ien ; i++ ) {\n                let data = response.data[i];\n                let linkField = pkeyIsJoin ?\n                    data['DT_RowId'].replace( editor.idPrefix(), '' ) :\n                    this._readProp( readField, data );\n                \n                if ( joinMap[ linkField ] ) {\n                    data[ this._name ] = joinMap[ linkField ];\n                }\n                else {\n                    data[ this._name ] = [];\n                }\n            }\n        }\n\n        // Field options\n        for ( let i=0, ien=fields.length ; i<ien ; i++ ) {\n            let opts = await fields[i].optionsExec( editor.db() );\n\n            if ( opts ) {\n                let name = this.name()+'[].'+fields[i].name();\n\n                response.options[ name ] = opts;\n            }\n        }\n    }\n\n\n    public async create ( editor: Editor, parentId: string, data: object ): Promise<void> {\n        // If not settable, or the many count for the join was not submitted\n        // then we do nothing\n        if (\n            ! this._set ||\n            ! data[ this._name ] ||\n            ! data[ this._name+'-many-count']\n        ) {\n            return;\n        }\n\n        this._prepare( editor );\n        let db = editor.db();\n\n        for ( let i=0, ien=data[ this._name ].length ; i<ien ; i++ ) {\n            await this._insert( db, parentId, data[ this._name ][i] );\n        }\n    }\n\n    public async update ( editor: Editor, parentId: string, data: object ): Promise<void> {\n        if ( ! this._set || ! data[ this._name+'-many-count'] ) {\n            return;\n        }\n\n        // WARNING - this will remove rows and then readd them. Any\n        // data not in the field list WILL BE LOST\n        await this.remove( editor, [parentId] );\n        await this.create( editor, parentId, data );\n    }\n\n    public async remove ( editor: Editor, ids: string[] ): Promise<void> {\n        if ( ! this._set ) {\n            return;\n        }\n\n        this._prepare( editor );\n        let db = editor.db();\n        let join = this._join;\n\n        if ( join.table ) {\n            let query = db( join.table );\n\n            for ( let i=0, ien=ids.length ; i<ien ; i++ ) {\n                query.orWhere( { [join.parent[1]]: ids[i] } );\n            }\n\n            await query.del();\n        }\n        else {\n            let query = db( this._table );\n\n            query.where( function () {\n                for ( let i=0, ien=ids.length ; i<ien ; i++ ) {\n                    query.orWhere( { [join.child.toString()]: ids[i] } );\n                }\n            } );\n\n            this._applyWhere( query );\n\n            await query.del();\n        }\n    }\n\n    public async validate ( errors, editor: Editor, data: object ): Promise<void> {\n        if ( ! this._set || ! data[ this._name ] ) {\n            return;\n        }\n\n        this._prepare( editor );\n        let joinData = data[ this._name ];\n\n        for ( let i=0, ien=joinData.length ; i<ien ; i++ ) {\n            await this._validateFields( errors, editor, joinData[i], this._name+'[].' );\n        }\n    }\n\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Private methods\n     */\n    private _applyWhere( query: knex ): void {\n        let where = this._where;\n\n        for ( let i=0, ien=where.length ; i<ien ; i++ ) {\n            query.where( where[i] );\n        }\n    }\n\n    private async _insert ( db: knex, parentId: string, data: object ): Promise<void> {\n        let join = this._join;\n        let fields = this.fields();\n\n        if ( join.table ) {\n            // Insert keys into the join table\n            await db( join.table )\n                .insert( {\n                    [join.parent[1]]: parentId,\n                    [join.child[1]]: data[ join.child[0] ]\n                } );\n        }\n        else {\n            // Insert values into the target table\n            let set = {\n                [join.child.toString()]: parentId\n            };\n\n            for ( let i=0, ien=fields.length ; i<ien ; i++ ) {\n                let field = fields[i];\n\n                if ( field.apply('create', data) ) {\n                    set[ field.dbField() ] = field.val( 'set', data );\n                }\n            }\n\n            await db( this._table )\n                .insert( set );\n        }\n    }\n\n\n    private _prepare( editor: Editor ): void {\n        this._editor = editor;\n\n        let links = this._links;\n        let editorTable = editor.table()[0];\n        let joinTable = this.table();\n\n        // FUTURE aliasParentTable\n\n        if ( links.length === 2 ) {\n            // No link table\n            let f1 = links[0].split('.');\n            let f2 = links[1].split('.');\n\n            if ( f1[0] === editorTable ) {\n                this._join.parent = f1[1];\n                this._join.child = f2[1];\n            }\n            else {\n                this._join.parent = f2[1];\n                this._join.child = f1[1];\n            }\n        }\n        else {\n            // Link table\n            let f1 = links[0].split('.');\n            let f2 = links[1].split('.');\n            let f3 = links[2].split('.');\n            let f4 = links[3].split('.');\n\n            // Discover the name of the link table\n            if ( f1[0] !== editorTable && f1[0] !== joinTable ) {\n                this._join.table = f1[0];\n            }\n            else if ( f2[0] !== editorTable && f2[0] !== joinTable ) {\n                this._join.table = f2[0];\n            }\n            else if ( f3[0] !== editorTable && f3[0] !== joinTable ) {\n                this._join.table = f3[0];\n            }\n            else {\n                this._join.table = f4[0]\n            }\n\n            this._join.parent = [ f1[1], f2[1] ];\n            this._join.child = [ f3[1], f4[1] ];\n        }\n    }\n\n    private async _validateFields( errors, editor: Editor, data: object, prefix: string ): Promise<void> {\n        let fields = this.fields();\n\n        for ( let i=0, ien=fields.length ; i<ien ; i++ ) {\n            let field = fields[i];\n            let validation = await field.validate( data, editor );\n\n            if ( validation !== true ) {\n                errors.push( {\n                    name: prefix+field.name(),\n                    status: validation\n                } );\n            }\n        }\n    }\n}"]}