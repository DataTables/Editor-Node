{"version":3,"sources":["validators.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,qCAAiD;AAEjD,oCAAsC;AACtC,+BAAiC;AAqBjC;IAAA;QACW,YAAO,GAAW,iBAAiB,CAAC;QACpC,UAAK,GAAY,IAAI,CAAC;QACtB,aAAQ,GAAY,IAAI,CAAC;IAUpC,CAAC;IARG,WAAW;IACG,cAAM,GAApB,UAAuB,IAAY;QAC/B,EAAE,CAAC,CAAE,IAAK,CAAC,CAAC,CAAC;YACT,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC;IACzB,CAAC;IACL,cAAC;AAAD,CAbA,AAaC,IAAA;AAbY,0BAAO;AAepB;IAOI,cAAc,IAAc;QACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;IACtB,CAAC;IACL,WAAC;AAAD,CAdA,AAcC,IAAA;AAdY,oBAAI;AAgBjB;IAAA;IA+eA,CAAC;IA3eiB,cAAI,GAAlB,UAAoB,GAAiB;QAAjB,oBAAA,EAAA,UAAiB;QACjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;;oBACtD,sBAAO,IAAI,EAAC;;;SACf,CAAA;IACL,CAAC;IAEa,eAAK,GAAnB,UAAqB,GAAiB;QAAjB,oBAAA,EAAA,UAAiB;QAClC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM;;6BAAG,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;oBAE3C,sBAAO,MAAM,KAAK,KAAK;4BACnB,IAAI,CAAC,OAAO;4BACZ,IAAI,EAAC;;;SACZ,CAAA;IACL,CAAC;IAEa,kBAAQ,GAAtB,UAAwB,GAAiB;QAAjB,oBAAA,EAAA,UAAiB;QACrC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM;;6BAAG,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;oBAE3C,sBAAO,MAAM,KAAK,KAAK;4BACnB,IAAI,CAAC,OAAO;4BACZ,IAAI,EAAC;;;SACZ,CAAA;IACL,CAAC;IAEa,kBAAQ,GAAtB,UAAwB,GAAiB;QAAjB,oBAAA,EAAA,UAAiB;QACrC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM;;6BAAG,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;oBAE3C,sBAAO,MAAM,KAAK,KAAK;4BACnB,IAAI,CAAC,OAAO;4BACZ,IAAI,EAAC;;;SACZ,CAAA;IACL,CAAC;IAEa,iBAAO,GAArB,UAAuB,GAAiB;QAAjB,oBAAA,EAAA,UAAiB;QACpC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM;;6BAAG,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;oBAC3C,EAAE,CAAC,CAAE,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;wBACpB,MAAM,gBAAC,MAAM,KAAK,KAAK;gCACnB,IAAI,CAAC,OAAO;gCACZ,IAAI,EAAC;oBACb,CAAC;oBAED,EAAE,CAAC,CAAE,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,KAAK;wBAC1G,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,OAAO,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,IAAK,CAAC,CACnH,CAAC;wBACG,MAAM,gBAAC,IAAI,EAAC;oBAChB,CAAC;oBAED,sBAAO,IAAI,CAAC,OAAO,EAAC;;;SACvB,CAAA;IACL,CAAC;IAKJ;;OAEG;IAEc,iBAAO,GAArB,UAAwB,OAAmB,EAAE,GAAiB;QAAtC,wBAAA,EAAA,aAAmB;QAAE,oBAAA,EAAA,UAAiB;QAC1D,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM;;6BAAG,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;oBAC3C,EAAE,CAAC,CAAE,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;wBACpB,MAAM,gBAAC,MAAM,KAAK,KAAK;gCACnB,IAAI,CAAC,OAAO;gCACZ,IAAI,EAAC;oBACb,CAAC;oBAED,EAAE,CAAC,CAAE,OAAO,KAAK,GAAI,CAAC,CAAC,CAAC;wBACpB,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;oBAC/C,CAAC;oBAED,sBAAO,KAAK,CAAE,UAAU,CAAE,GAAG,CAAE,CAAE;4BAC7B,IAAI,CAAC,OAAO;4BACZ,IAAI,EAAC;;;SACZ,CAAC;IACN,CAAC;IAEa,gBAAM,GAApB,UAAuB,GAAW,EAAE,OAAmB,EAAE,GAAiB;QAAtC,wBAAA,EAAA,aAAmB;QAAE,oBAAA,EAAA,UAAiB;QACtE,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;;;;gCACxC,qBAAM,SAAS,CAAC,OAAO,CAAE,OAAO,EAAE,IAAI,CAAE,CAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAE,EAAA;;sCAA3D,SAA2D;4BACzE,EAAE,CAAC,CAAE,OAAO,KAAK,IAAK,CAAC,CAAC,CAAC;gCACrB,MAAM,gBAAC,IAAI,CAAC,OAAO,EAAC;4BACxB,CAAC;4BAED,EAAE,CAAC,CAAE,OAAO,KAAK,GAAI,CAAC,CAAC,CAAC;gCACpB,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;4BAC/C,CAAC;4BAED,sBAAO,GAAG,GAAG,GAAG;oCACZ,IAAI,CAAC,OAAO;oCACZ,IAAI,EAAC;;;;SACZ,CAAC;IACN,CAAC;IAEa,gBAAM,GAApB,UAAuB,GAAW,EAAE,OAAmB,EAAE,GAAiB;QAAtC,wBAAA,EAAA,aAAmB;QAAE,oBAAA,EAAA,UAAiB;QACtE,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;;;;gCACxC,qBAAM,SAAS,CAAC,OAAO,CAAE,OAAO,EAAE,IAAI,CAAE,CAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAE,EAAA;;sCAA3D,SAA2D;4BACzE,EAAE,CAAC,CAAE,OAAO,KAAK,IAAK,CAAC,CAAC,CAAC;gCACrB,MAAM,gBAAC,IAAI,CAAC,OAAO,EAAC;4BACxB,CAAC;4BAED,EAAE,CAAC,CAAE,OAAO,KAAK,GAAI,CAAC,CAAC,CAAC;gCACpB,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;4BAC/C,CAAC;4BAED,sBAAO,GAAG,GAAG,GAAG;oCACZ,IAAI,CAAC,OAAO;oCACZ,IAAI,EAAC;;;;SACZ,CAAC;IACN,CAAC;IAEa,mBAAS,GAAvB,UAA0B,GAAW,EAAE,GAAW,EAAE,OAAmB,EAAE,GAAiB;QAAtC,wBAAA,EAAA,aAAmB;QAAE,oBAAA,EAAA,UAAiB;QACtF,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;;;;gCACxC,qBAAM,SAAS,CAAC,OAAO,CAAE,OAAO,EAAE,IAAI,CAAE,CAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAE,EAAA;;sCAA3D,SAA2D;4BACzE,EAAE,CAAC,CAAE,OAAO,KAAK,IAAK,CAAC,CAAC,CAAC;gCACrB,MAAM,gBAAC,IAAI,CAAC,OAAO,EAAC;4BACxB,CAAC;4BAED,EAAE,CAAC,CAAE,OAAO,KAAK,GAAI,CAAC,CAAC,CAAC;gCACpB,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;4BAC/C,CAAC;4BAED,sBAAO,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG;oCACzB,IAAI,CAAC,OAAO;oCACZ,IAAI,EAAC;;;;SACZ,CAAC;IACN,CAAC;IAKJ;;OAEG;IAEc,eAAK,GAAnB,UAAsB,OAAmB,EAAE,GAAiB;QAAtC,wBAAA,EAAA,aAAmB;QAAE,oBAAA,EAAA,UAAiB;QACxD,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM,EAON,EAAE;;6BAPO,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;oBAC3C,EAAE,CAAC,CAAE,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;wBACpB,MAAM,gBAAC,MAAM,KAAK,KAAK;gCACnB,IAAI,CAAC,OAAO;gCACZ,IAAI,EAAC;oBACb,CAAC;yBAEQ,wHAAwH;oBAEjI,sBAAO,EAAE,CAAC,IAAI,CAAE,GAAG,CAAE;4BACjB,IAAI;4BACJ,IAAI,CAAC,OAAO,EAAC;;;SACpB,CAAC;IACN,CAAC;IAEa,gBAAM,GAApB,UAAuB,GAAW,EAAE,GAAiB;QAAjB,oBAAA,EAAA,UAAiB;QACjD,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM;;6BAAG,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;oBAC3C,EAAE,CAAC,CAAE,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;wBACpB,MAAM,gBAAC,MAAM,KAAK,KAAK;gCACnB,IAAI,CAAC,OAAO;gCACZ,IAAI,EAAC;oBACb,CAAC;oBAED,sBAAO,GAAG,CAAC,MAAM,GAAG,GAAG;4BACnB,IAAI,CAAC,OAAO;4BACZ,IAAI,EAAC;;;SACZ,CAAC;IACN,CAAC;IAEa,gBAAM,GAApB,UAAuB,GAAW,EAAE,GAAiB;QAAjB,oBAAA,EAAA,UAAiB;QACjD,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM;;6BAAG,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;oBAC3C,EAAE,CAAC,CAAE,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;wBACpB,MAAM,gBAAC,MAAM,KAAK,KAAK;gCACnB,IAAI,CAAC,OAAO;gCACZ,IAAI,EAAC;oBACb,CAAC;oBAED,sBAAO,GAAG,CAAC,MAAM,GAAG,GAAG;4BACnB,IAAI,CAAC,OAAO;4BACZ,IAAI,EAAC;;;SACZ,CAAC;IACN,CAAC;IAEa,mBAAS,GAAvB,UAA0B,GAAW,EAAE,GAAW,EAAE,GAAiB;QAAjB,oBAAA,EAAA,UAAiB;QACjE,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM;;6BAAG,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;oBAC3C,EAAE,CAAC,CAAE,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;wBACpB,MAAM,gBAAC,MAAM,KAAK,KAAK;gCACnB,IAAI,CAAC,OAAO;gCACZ,IAAI,EAAC;oBACb,CAAC;oBAED,sBAAO,GAAG,CAAC,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG;4BACvC,IAAI,CAAC,OAAO;4BACZ,IAAI,EAAC;;;SACZ,CAAC;IACN,CAAC;IAEa,YAAE,GAAhB,UAAmB,GAAiB;QAAjB,oBAAA,EAAA,UAAiB;QAChC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM,EAON,CAAC,EAKK,CAAC,EACH,MAAM;;6BAbD,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;oBAC3C,EAAE,CAAC,CAAE,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;wBACpB,MAAM,gBAAC,MAAM,KAAK,KAAK;gCACnB,IAAI,CAAC,OAAO;gCACZ,IAAI,EAAC;oBACb,CAAC;wBAEO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;oBACtB,EAAE,CAAC,CAAE,CAAC,CAAC,MAAM,KAAK,CAAE,CAAC,CAAC,CAAC;wBACnB,MAAM,gBAAC,IAAI,CAAC,OAAO,EAAC;oBACxB,CAAC;oBAED,GAAG,CAAC,CAAC,IAAO,CAAC,EAAG,CAAC,GAAC,CAAC,EAAG,CAAC,EAAE,EAAG,CAAC;iCACZ,QAAQ,CAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAE;wBACjC,EAAE,CAAC,CAAE,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,GAAC,CAAE,CAAC,CAAC,CAAC;4BACtB,MAAM,gBAAC,IAAI,CAAC,OAAO,EAAC;wBACxB,CAAC;wBAED,EAAE,CAAC,CAAE,MAAM,GAAG,CAAC,IAAI,MAAM,GAAG,GAAI,CAAC,CAAC,CAAC;4BAC/B,MAAM,gBAAC,IAAI,CAAC,OAAO,EAAC;wBACxB,CAAC;oBACL,CAAC;oBAED,sBAAO,IAAI,EAAC;;;SACf,CAAC;IACN,CAAC;IAEa,aAAG,GAAjB,UAAoB,GAAiB;QAAjB,oBAAA,EAAA,UAAiB;QACjC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM;;6BAAG,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;oBAC3C,EAAE,CAAC,CAAE,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;wBACpB,MAAM,gBAAC,MAAM,KAAK,KAAK;gCACnB,IAAI,CAAC,OAAO;gCACZ,IAAI,EAAC;oBACb,CAAC;oBAED,sBAAO,CAAE,QAAQ,CAAC,SAAS,CAAE,GAAG,CAAE;4BAC9B,IAAI,CAAC,OAAO;4BACZ,IAAI,EAAC;;;SACZ,CAAC;IACN,CAAC;IAEa,aAAG,GAAjB,UAAoB,GAAiB;QAAjB,oBAAA,EAAA,UAAiB;QACjC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM,EAON,KAAK;;6BAPI,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;oBAC3C,EAAE,CAAC,CAAE,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;wBACpB,MAAM,gBAAC,MAAM,KAAK,KAAK;gCACnB,IAAI,CAAC,OAAO;gCACZ,IAAI,EAAC;oBACb,CAAC;4BAEW,IAAI,CAAC,KAAK;oBAEtB,sBAAO,KAAK,CAAC,SAAS,CAAE,GAAG,CAAE,KAAK,GAAG;4BACjC,IAAI,CAAC,OAAO;4BACZ,IAAI,EAAC;;;SACZ,CAAC;IACN,CAAC;IAEa,gBAAM,GAApB,UAAuB,MAAa,EAAE,GAAiB;QAAjB,oBAAA,EAAA,UAAiB;QACnD,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM;;6BAAG,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;oBAC3C,EAAE,CAAC,CAAE,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;wBACpB,MAAM,gBAAC,MAAM,KAAK,KAAK;gCACnB,IAAI,CAAC,OAAO;gCACZ,IAAI,EAAC;oBACb,CAAC;oBAED,sBAAO,MAAM,CAAC,QAAQ,CAAE,GAAG,CAAE;4BACzB,IAAI;4BACJ,IAAI,CAAC,OAAO,EAAC;;;SACpB,CAAC;IACN,CAAC;IAEa,gBAAM,GAApB,UAAuB,GAAiB;QAAjB,oBAAA,EAAA,UAAiB;QACpC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM;;6BAAG,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;oBAC3C,EAAE,CAAC,CAAE,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;wBACpB,MAAM,gBAAC,MAAM,KAAK,KAAK;gCACnB,IAAI,CAAC,OAAO;gCACZ,IAAI,EAAC;oBACb,CAAC;oBAED,sBAAO,GAAG,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;4BAC9B,IAAI,CAAC,OAAO;4BACZ,IAAI,EAAC;;;SACZ,CAAC;IACN,CAAC;IAGD;;MAEE;IAEY,oBAAU,GAAxB,UAA2B,MAAc,EAAE,MAAmB,EAAE,GAAiB;QAAtC,uBAAA,EAAA,aAAmB;QAAE,oBAAA,EAAA,UAAiB;QAC7E,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM,EAON,GAAG;;6BAPM,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;oBAC3C,EAAE,CAAC,CAAE,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;wBACpB,MAAM,gBAAC,MAAM,KAAK,KAAK;gCACnB,IAAI,CAAC,OAAO;gCACZ,IAAI,EAAC;oBACb,CAAC;0BAES,MAAM;wBACZ,MAAM,CAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAE,CAAC,OAAO,EAAE;wBAC7C,MAAM,CAAE,GAAG,EAAE,MAAM,EAAE,IAAI,CAAE,CAAC,OAAO,EAAE;oBAEzC,sBAAO,CAAE,GAAG;4BACR,IAAI,CAAC,OAAO;4BACZ,IAAI,EAAC;;;SACZ,CAAC;IACN,CAAC;IAGD;;MAEE;IAEY,kBAAQ,GAAtB,UAAyB,GAAiB,EAAE,MAAmB,EAAE,KAAkB,EAAE,EAAa;QAAzE,oBAAA,EAAA,UAAiB;QAAE,uBAAA,EAAA,aAAmB;QAAE,sBAAA,EAAA,YAAkB;QAAE,mBAAA,EAAA,SAAa;QAC9F,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM,EAmBN,CAAC,EAOG,IAAI;;;;qCA1BC,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;4BAC3C,EAAE,CAAC,CAAE,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;gCACpB,MAAM,gBAAC,MAAM,KAAK,KAAK;wCACnB,IAAI,CAAC,OAAO;wCACZ,IAAI,EAAC;4BACb,CAAC;4BAED,EAAE,CAAC,CAAE,EAAE,KAAK,IAAK,CAAC,CAAC,CAAC;gCAChB,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;4BACjB,CAAC;4BAED,EAAE,CAAC,CAAE,KAAK,KAAK,IAAK,CAAC,CAAC,CAAC;gCACnB,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;4BACnC,CAAC;4BAED,EAAE,CAAC,CAAE,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;gCACpB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;4BAClC,CAAC;gCAEO,IAAI,CAAC,EAAE,EAAE,CAAE,KAAK,CAAE;iCACrB,MAAM,CAAE,MAAM,CAAE;iCAChB,KAAK,CAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAE;4BAE7B,kEAAkE;4BAClE,+CAA+C;4BAC/C,EAAE,CAAC,CAAE,IAAI,CAAC,MAAM,KAAK,MAAO,CAAC,CAAC,CAAC;uCAChB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAE;gCACpD,CAAC,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;4BACvB,CAAC;4BAES,qBAAM,CAAC,EAAA;;kCAAP,SAAO;4BAEjB,sBAAO,CAAE,GAAG;oCACR,IAAI,CAAC,OAAO;oCACZ,IAAI,EAAC;;;;SACZ,CAAC;IACN,CAAC;IAEa,kBAAQ,GAAtB,UAAyB,GAAiB,EAAE,MAAmB,EAAE,KAAkB,EAAE,EAAa;QAAzE,oBAAA,EAAA,UAAiB;QAAE,uBAAA,EAAA,aAAmB;QAAE,sBAAA,EAAA,YAAkB;QAAE,mBAAA,EAAA,SAAa;QAC9F,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;QAEjC,MAAM,CAAC,UAAiB,GAAQ,EAAE,IAAY,EAAE,IAAU;;oBAClD,MAAM,EACN,OAAO;;;;qCADE,SAAS,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE;sCAC7B,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;4BAElC,EAAE,CAAC,CAAE,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;gCACpB,MAAM,gBAAC,MAAM,KAAK,KAAK;wCACnB,IAAI,CAAC,OAAO;wCACZ,IAAI,EAAC;4BACb,CAAC;4BAED,EAAE,CAAC,CAAE,EAAE,KAAK,IAAK,CAAC,CAAC,CAAC;gCAChB,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;4BACjB,CAAC;4BAED,EAAE,CAAC,CAAE,KAAK,KAAK,IAAI,IAAI,OAAO,YAAY,iBAAY,CAAC,CAAC,CAAC;gCACrD,KAAK,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;4BAC5B,CAAC;4BAED,EAAE,CAAC,CAAE,MAAM,KAAK,IAAI,IAAI,OAAO,YAAY,iBAAY,CAAC,CAAC,CAAC;gCACtD,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;4BAC7B,CAAC;4BAED,EAAE,CAAC,CAAE,KAAK,KAAK,IAAI,IAAI,MAAM,KAAK,IAAK,CAAC,CAAC,CAAC;gCACtC,MAAM,IAAI,KAAK,CAAE,oEAAoE,GAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAE,CAAC;4BAC9G,CAAC;4BAES,qBAAM,EAAE,CAAE,KAAK,CAAE;qCACtB,MAAM,CAAE,MAAM,CAAE;qCAChB,KAAK,WAAI,GAAC,MAAM,IAAG,GAAG,MAAI,EAAA;;kCAFrB,SAEqB;4BAE/B,sBAAO,CAAE,GAAG;oCACR,IAAI,CAAC,OAAO;oCACZ,IAAI,EAAC;;;;SACZ,CAAC;IACN,CAAC;IAGD;;MAEE;IAEY,wBAAc,GAA5B,UAA8B,KAAe,EAAE,GAAW;QACtD,MAAM,CAAC,UAAiB,IAAW;;;oBAC/B,sBAAO,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAC,IAAI,CAAE;4BAC9B,IAAI;4BACJ,GAAG,EAAC;;;SACX,CAAA;IACL,CAAC;IAEa,kBAAQ,GAAtB,UAAwB,IAAY,EAAE,GAAW;QAC7C,MAAM,CAAC,UAAiB,IAAW;;;oBAC/B,sBAAO,IAAI,CAAC,IAAI,GAAG,IAAI;4BACnB,GAAG;4BACH,IAAI,EAAC;;;SACZ,CAAA;IACL,CAAC;IAGD;;MAEE;IAEa,iBAAO,GAAtB,UAAwB,GAAQ,EAAE,IAAa;QAC3C,oBAAoB;QACpB,EAAE,CAAC,CAAE,CAAC,IAAI,CAAC,QAAQ,IAAI,GAAG,KAAK,IAAK,CAAC,CAAC,CAAC;YACnC,sBAAsB;YACtB,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,EAAE,CAAC,CAAE,GAAG,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,IAAI,GAAG,KAAK,EAAG,CAAC,CAAC,CAAC;YACvD,0BAA0B;YAC1B,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,yBAAyB;QACzB,EAAE,CAAC,CAAE,IAAI,CAAC,QAAQ,IAAI,GAAG,KAAK,IAAK,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,EAAE,CAAC,CAAE,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,GAAG,KAAK,EAAG,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,0DAA0D;QAC1D,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL,gBAAC;AAAD,CA/eA,AA+eC;AA9eiB,iBAAO,GAAG,OAAO,CAAC;AAClB,cAAI,GAAG,IAAI,CAAC","file":"validators.js","sourcesContent":["\nimport * as knex from 'knex';\nimport Editor from './editor';\nimport Field from './field';\nimport {default as JoinOptions} from './options';\nimport {IFile} from './upload';\nimport * as validUrl from 'valid-url';\nimport * as moment from 'moment';\n\n// Note that validators return a Promise to allow async validators, such as\n// checking a value is unique against the database\nexport interface IValidator {\n    (val: any, data: object, host: Host): Promise<true|string>;\n}\n\nexport interface IFileValidator {\n    (file: IFile): Promise<true|string>;\n}\n\nexport interface HostOpts {\n    action: string;\n    id: string;\n    field: Field;\n    editor: Editor;\n    db: knex;\n}\n\n\nexport class Options {\n    public message: string = \"Input not valid\";\n    public empty: boolean = true;\n    public optional: boolean = true;\n\n    // internal\n    public static select ( user:Options ): Options {\n        if ( user ) {\n            return user;\n        }\n\n        return new Options();\n    }\n}\n\nexport class Host {\n    public action: string;\n    public id: string;\n    public field: Field;\n    public editor: Editor;\n    public db: knex;\n\n    constructor ( opts: HostOpts ) {\n        this.action = opts.action;\n        this.id = opts.id;\n        this.field = opts.field;\n        this.editor = opts.editor;\n        this.db = opts.db;\n    }\n}\n\nexport default class Validator {\n    public static Options = Options;\n    public static Host = Host;\n\n    public static none( cfg: Options=null ): IValidator {\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            return true;\n        }\n    }\n\n    public static basic( cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n\n            return common === false ?\n                opts.message :\n                true;\n        }\n    }\n\n    public static required( cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n        opts.empty = false;\n        opts.optional = false;\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n\n            return common === false ?\n                opts.message :\n                true;\n        }\n    }\n\n    public static notEmpty( cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n        opts.empty = false;\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n\n            return common === false ?\n                opts.message :\n                true;\n        }\n    }\n\n    public static boolean( cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n            if ( common !== null ) {\n                return common === false ?\n                    opts.message :\n                    true;\n            }\n\n            if ( val === true || val === 1 || val === '1' || val === 'true' || val === 't' || val === 'on' || val === 'yes' ||\n                 val === false || val === 0 || val === '0' || val === 'false' || val === 'f' || val === 'off' || val === 'no' )\n            {\n                return true;\n            }\n\n            return opts.message;\n        }\n    }\n\n\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Number validation methods\n\t */\n\n    public static numeric ( decimal: string='.', cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n            if ( common !== null ) {\n                return common === false ?\n                    opts.message :\n                    true;\n            }\n            \n            if ( decimal !== '.' ) {\n                val = val.toString().replace(decimal, '.');\n            }\n\n            return isNaN( parseFloat( val ) ) ?\n                opts.message :\n                true;\n        };\n    }\n\n    public static minNum ( min: number, decimal: string='.', cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let numeric = await Validator.numeric( decimal, opts )( val, data, host );\n            if ( numeric !== true ) {\n                return opts.message;\n            }\n            \n            if ( decimal !== '.' ) {\n                val = val.toString().replace(decimal, '.');\n            }\n\n            return val < min ?\n                opts.message :\n                true;\n        };\n    }\n\n    public static maxNum ( max: number, decimal: string='.', cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let numeric = await Validator.numeric( decimal, opts )( val, data, host );\n            if ( numeric !== true ) {\n                return opts.message;\n            }\n            \n            if ( decimal !== '.' ) {\n                val = val.toString().replace(decimal, '.');\n            }\n\n            return val > max ?\n                opts.message :\n                true;\n        };\n    }\n\n    public static minMaxNum ( min: number, max: number, decimal: string='.', cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let numeric = await Validator.numeric( decimal, opts )( val, data, host );\n            if ( numeric !== true ) {\n                return opts.message;\n            }\n            \n            if ( decimal !== '.' ) {\n                val = val.toString().replace(decimal, '.');\n            }\n\n            return val < min || val > max ?\n                opts.message :\n                true;\n        };\n    }\n\n\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Number validation methods\n\t */\n\n    public static email ( decimal: string='.', cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n            if ( common !== null ) {\n                return common === false ?\n                    opts.message :\n                    true;\n            }\n\n            let re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n            return re.test( val ) ?\n                true :\n                opts.message;\n        };\n    }\n\n    public static minLen ( min: number, cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n            if ( common !== null ) {\n                return common === false ?\n                    opts.message :\n                    true;\n            }\n\n            return val.length < min ?\n                opts.message :\n                true;\n        };\n    }\n\n    public static maxLen ( max: number, cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n            if ( common !== null ) {\n                return common === false ?\n                    opts.message :\n                    true;\n            }\n\n            return val.length > max ?\n                opts.message :\n                true;\n        };\n    }\n\n    public static minMaxLen ( min: number, max: number, cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n            if ( common !== null ) {\n                return common === false ?\n                    opts.message :\n                    true;\n            }\n\n            return val.length < min || val.length > max ?\n                opts.message :\n                true;\n        };\n    }\n\n    public static ip ( cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n            if ( common !== null ) {\n                return common === false ?\n                    opts.message :\n                    true;\n            }\n\n            let a = val.split('.');\n            if ( a.length !== 4 ) {\n                return opts.message;\n            }\n\n            for ( let i=0 ; i<4 ; i++ ) {\n                let parsed = parseInt( a[i], 10 );\n                if ( parsed !== a[i]*1 ) {\n                    return opts.message;\n                }                \n\n                if ( parsed < 0 || parsed > 255 ) {\n                    return opts.message;\n                }\n            }\n\n            return true;\n        };\n    }\n\n    public static url ( cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n            if ( common !== null ) {\n                return common === false ?\n                    opts.message :\n                    true;\n            }\n\n            return ! validUrl.isHttpUri( val ) ?\n                opts.message :\n                true;\n        };\n    }\n\n    public static xss ( cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n            if ( common !== null ) {\n                return common === false ?\n                    opts.message :\n                    true;\n            }\n\n            let field = host.field;\n\n            return field.xssSafety( val ) !== val ?\n                opts.message :\n                true;\n        };\n    }\n\n    public static values ( values: any[], cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n            if ( common !== null ) {\n                return common === false ?\n                    opts.message :\n                    true;\n            }\n\n            return values.includes( val ) ?\n                true :\n                opts.message;\n        };\n    }\n\n    public static noTags ( cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n            if ( common !== null ) {\n                return common === false ?\n                    opts.message :\n                    true;\n            }\n\n            return val.toString().test(/<.*>/) ?\n                opts.message :\n                true;\n        };\n    }\n\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n    * Date validation methods\n    */\n\n    public static dateFormat ( format: string, locale: string=null, cfg: Options=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n            if ( common !== null ) {\n                return common === false ?\n                    opts.message :\n                    true;\n            }\n\n            let res = locale ?\n                moment( val, format, locale, true ).isValid() :\n                moment( val, format, true ).isValid();\n\n            return ! res ?\n                opts.message :\n                true;\n        };\n    }\n\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n    * Database validation\n    */\n\n    public static dbUnique ( cfg: Options=null, column: string=null, table: string=null, db: knex=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n            if ( common !== null ) {\n                return common === false ?\n                    opts.message :\n                    true;\n            }\n\n            if ( db === null ) {\n                db = host.db;\n            }\n\n            if ( table === null ) {\n                table = host.editor.table()[0];\n            }\n\n            if ( column === null ) {\n                column = host.field.dbField();\n            }\n\n            let q = host.db()( table )\n                .select( column )\n                .where( { column: val } )\n\n            // If doing an edit then we need to also discount the current row,\n            // since it is of course already validly unique\n            if ( host.action === 'edit' ) {\n                let cond = host.editor.pkeyToObject( host.id, true );\n                q.whereNot( cond );\n            }\n\n            let res = await q;\n\n            return ! res ?\n                opts.message :\n                true;\n        };\n    }\n\n    public static dbValues ( cfg: Options=null, column: string=null, table: string=null, db: knex=null ): IValidator {\n        let opts = Options.select( cfg );\n\n        return async function ( val: any, data: object, host: Host ): Promise<true|string> {\n            let common = Validator._common( val, opts );\n            let options = host.field.options();\n\n            if ( common !== null ) {\n                return common === false ?\n                    opts.message :\n                    true;\n            }\n\n            if ( db === null ) {\n                db = host.db;\n            }\n\n            if ( table === null && options instanceof JoinOptions ) {\n                table = options.table();\n            }\n\n            if ( column === null && options instanceof JoinOptions ) {\n                column = options.value();\n            }\n\n            if ( table === null || column === null ) {\n                throw new Error( 'Table or column for database value check is not defined for field '+host.field.name() );\n            }\n\n            let res = await db( table )\n                .select( column )\n                .where( { [column]: val } )\n\n            return ! res ?\n                opts.message :\n                true;\n        };\n    }\n\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n    * File upload validators\n    */\n\n    public static fileExtensions( extns: string[], msg: string ): IFileValidator {\n        return async function ( file: IFile ) {\n            return extns.includes( file.extn ) ?\n                true :\n                msg;\n        }\n    }\n\n    public static fileSize( size: number, msg: string ): IFileValidator {\n        return async function ( file: IFile ) {\n            return file.size > size ?\n                msg :\n                true;\n        }\n    }\n\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n    * Internal methods\n    */\n\n    private static _common( val: any, opts: Options ): boolean|null {\n        // Error state tests\n        if ( !opts.optional && val === null ) {\n            // Value must be given\n            return false;\n        }\n\n        if ( val !== null && opts.empty === false && val === '' ) {\n            // Value must not be empty\n            return false;\n        }\n\n        // Validate passed states\n        if ( opts.optional && val === null ) {\n            return true;\n        }\n\n        if ( opts.empty === true && val === '' ) {\n            return true;\n        }\n\n        // Have the specific validation function perform its tests\n        return null;\n    }\n}"]}