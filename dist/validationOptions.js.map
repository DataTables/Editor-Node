{"version":3,"sources":["validationOptions.ts"],"names":[],"mappings":";;AACA;;;;;GAKG;AACH;IAAA;QAYI;;;;WAIG;QACI,YAAO,GAAW,iBAAiB,CAAC;QAE3C;;;;;WAKG;QACI,UAAK,GAAY,IAAI,CAAC;QAE7B;;;;;;;;;WASG;QACI,aAAQ,GAAY,IAAI,CAAC;IACpC,CAAC;IArCG;;OAEG;IACW,wBAAM,GAApB,UAAsB,IAAuB;QACzC,EAAE,CAAC,CAAE,IAAK,CAAC,CAAC,CAAC;YACT,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,IAAI,iBAAiB,EAAE,CAAC;IACnC,CAAC;IA4BL,wBAAC;AAAD,CAtCA,AAsCC,IAAA","file":"validationOptions.js","sourcesContent":["\n/**\n * Common validation options that can be specified for all validation methods.\n *\n * @export\n * @class ValidationOptions\n */\nexport default class ValidationOptions {\n    /**\n     * @ignore\n     */\n    public static select( user: ValidationOptions ): ValidationOptions {\n        if ( user ) {\n            return user;\n        }\n\n        return new ValidationOptions();\n    }\n\n    /**\n     * Error message should the validation fail\n     *\n     * @type {string}\n     */\n    public message: string = \"Input not valid\";\n\n    /**\n     * Allow a field to be empty, i.e. a zero length string -\n     * `''` (`true` - default) or require it to be non-zero length (`false`).\n     *\n     * @type {boolean}\n     */\n    public empty: boolean = true;\n\n    /**\n     * Require the field to be submitted (`false`) or not\n     * (`true` - default). When set to `true` the field does not need to be\n     * included in the list of parameters sent by the client - if set to `false`\n     * then it must be included. This option can be particularly useful in Editor\n     * as Editor will not set a value for fields which have not been submitted -\n     * giving the ability to submit just a partial list of options.\n     *\n     * @type {boolean}\n     */\n    public optional: boolean = true;\n}\n"]}