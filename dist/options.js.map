{"version":3,"sources":["options.ts"],"names":[],"mappings":"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","file":"options.js","sourcesContent":["\nimport knex from 'knex';\n\nfunction isNumeric(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nexport interface IOption {\n    label: string;\n    value: string|number;\n}\n\nexport interface IRenderer {\n    ( row: object ): string\n}\n\nexport interface CustomOptions {\n    ( db: knex ): Promise<IOption[]>\n}\n\nexport default class Options {\n    private _table: string;\n    private _value: string;\n    private _label: string[];\n    private _limit: number;\n    private _renderer: IRenderer;\n    private _where: any;\n    private _order: string;\n\n\n    public label (): string;\n    public label (label: string[]): Options;\n    public label (label?: string[]): any {\n        if ( label === undefined ) {\n            return this._label;\n        }\n\n        if ( Array.isArray( label ) ) {\n            this._label = label;\n        }\n        else {\n            this._label = [ label ];\n        }\n\n        return this;\n    }\n\n    public limit (): number;\n    public limit (limit: number): Options;\n    public limit (limit?: number): any {\n        if ( limit === undefined ) {\n            return this._limit;\n        }\n\n        this._limit = limit;\n        return this;\n    }\n\n    public order (): string;\n    public order (order: string): Options;\n    public order (order?: string): any {\n        if ( order === undefined ) {\n            return this._order;\n        }\n\n        this._order = order;\n        return this;\n    }\n\n    public render (): IRenderer;\n    public render (fn: IRenderer): Options;\n    public render (fn?: IRenderer): any {\n        if ( fn === undefined ) {\n            return this._renderer;\n        }\n\n        this._renderer = fn;\n        return this;\n    }\n\n    public table (): string;\n    public table (table: string): Options;\n    public table (table?: string): any {\n        if ( table === undefined ) {\n            return this._table;\n        }\n\n        this._table = table;\n        return this;\n    }\n\n    public value (): string;\n    public value (value: string): Options;\n    public value (value?: string): any {\n        if ( value === undefined ) {\n            return this._value;\n        }\n\n        this._value = value;\n        return this;\n    }\n\n    public where (): any;\n    public where (where: any): Options;\n    public where (where?: any): any {\n        if ( where === undefined ) {\n            return this._where;\n        }\n\n        this._where = where;\n        return this;\n    }\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Internal methods\n\t */\n    public async exec ( db: knex ): Promise<IOption[]> {\n        let label = this._label;\n        let value = this._value;\n        let formatter = this._renderer;\n\n        // Create a list of the fields that we need to get from the db\n        let fields = [ value ].concat( label );\n\n        // We need a default formatter if one isn't provided\n        if ( ! formatter ) {\n            formatter = function ( row ) {\n                let a = [];\n\n                for ( let i=0, ien=label.length ; i<ien ; i++ ) {\n                    a.push( row[ label[i] ] );\n                }\n\n                return a.join(' ');\n            };\n        }\n\n        // Get the data\n        let q = db( this._table )\n            .distinct( fields )\n            .select();\n        \n        if ( this._where ) {\n            q.where( this._where );\n        }\n\n        if ( this._order ) {\n            q.order( this._order );\n        }\n        \n        if ( this._limit ) {\n            q.limit( this.limit );\n        }\n\n        let res = await q;\n        let out = [];\n\n        // Create the output array\n        for ( let i=0, ien=res.length ; i<ien ; i++ ) {\n            out.push( {\n                label: formatter( res[i] ),\n                value: res[i][ value ]\n            } );\n        }\n\n        // Only sort if there was no SQL order field\n        if ( ! this._order ) {\n            out.sort( function ( a, b ) {\n                if ( isNumeric(a) && isNumeric(b) ) {\n                    return (a.label*1) - (b.label*1);\n                }\n                return a.label < b.label ?\n                    -1 : a.label > b.label ?\n                        1 :\n                        0;\n            } );\n        }\n\n        return out;\n    }\n}\n"]}