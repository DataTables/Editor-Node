{"version":3,"sources":["formatters.ts"],"names":[],"mappings":";;AAAA,+BAAiC;AAMjC;IAAA;IAkDA,CAAC;IAjDiB,yBAAe,GAA7B,UAAgC,MAAc;QAC1C,MAAM,CAAC,UAAU,GAAQ,EAAE,IAAY;YACnC,MAAM,CAAC,MAAM,CAAE,GAAG,EAAE,YAAY,CAAE,CAAC,MAAM,CAAE,MAAM,CAAE,CAAC;QACxD,CAAC,CAAC;IACN,CAAC;IAEa,yBAAe,GAA7B,UAAgC,MAAc;QAC1C,MAAM,CAAC,UAAU,GAAQ,EAAE,IAAY;YACnC,MAAM,CAAC,MAAM,CAAE,GAAG,EAAE,MAAM,CAAE,CAAC,MAAM,CAAE,YAAY,CAAE,CAAC;QACxD,CAAC,CAAC;IACN,CAAC;IAEa,kBAAQ,GAAtB,UAAyB,IAAY,EAAE,EAAU;QAC7C,MAAM,CAAC,UAAU,GAAQ,EAAE,IAAY;YACnC,MAAM,CAAC,MAAM,CAAE,GAAG,EAAE,IAAI,CAAE,CAAC,MAAM,CAAE,EAAE,CAAE,CAAC;QAC5C,CAAC,CAAC;IACN,CAAC;IAEa,iBAAO,GAArB,UAAwB,SAAuB;QAAvB,0BAAA,EAAA,eAAuB;QAC3C,MAAM,CAAC,UAAU,GAAQ,EAAE,IAAY;YACnC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAE,SAAS,CAAE,CAAC;QAC7C,CAAC,CAAC;IACN,CAAC;IAEa,iBAAO,GAArB,UAAwB,SAAuB;QAAvB,0BAAA,EAAA,eAAuB;QAC3C,MAAM,CAAC,UAAU,GAAQ,EAAE,IAAY;YACnC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC;QACjC,CAAC,CAAC;IACN,CAAC;IAEa,iBAAO,GAArB,UAAwB,UAAe;QACnC,MAAM,CAAC,UAAU,GAAQ,EAAE,IAAY;YACnC,MAAM,CAAC,GAAG,KAAK,EAAE;gBACb,UAAU;gBACV,GAAG,CAAC;QACZ,CAAC,CAAC;IACN,CAAC;IAEa,yBAAe,GAA7B,UAAgC,IAAgB;QAAhB,qBAAA,EAAA,UAAgB;QAC5C,MAAM,CAAC,UAAU,GAAQ,EAAE,IAAY;YACnC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,CAAE,CAAC;QACpC,CAAC,CAAC;IACN,CAAC;IAEa,uBAAa,GAA3B,UAA8B,IAAgB;QAAhB,qBAAA,EAAA,UAAgB;QAC1C,MAAM,CAAC,UAAU,GAAQ,EAAE,IAAY;YACnC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAE,GAAG,EAAE,IAAI,CAAE,CAAC;QACpC,CAAC,CAAC;IACN,CAAC;IACL,gBAAC;AAAD,CAlDA,AAkDC,IAAA","file":"formatters.js","sourcesContent":["import * as moment from 'moment';\n\nexport interface IFormatter {\n    (val: any, data: object): any;\n}\n\nexport default class Formatter {\n    public static sqlDateToFormat ( format: string ): IFormatter {\n        return function (val: any, data: object ) {\n            return moment( val, 'YYYY-MM-DD' ).format( format );\n        };\n    }\n\n    public static formatToSqlDate ( format: string ): IFormatter {\n        return function (val: any, data: object ) {\n            return moment( val, format ).format( 'YYYY-MM-DD' );\n        };\n    }\n\n    public static dateTime ( from: string, to: string ): IFormatter {\n        return function (val: any, data: object ) {\n            return moment( val, from ).format( to );\n        };\n    }\n\n    public static explode ( delimiter: string = '|' ): IFormatter {\n        return function (val: any, data: object ) {\n            return val.toString().split( delimiter );\n        };\n    }\n\n    public static implode ( delimiter: string = '|' ): IFormatter {\n        return function (val: any, data: object ) {\n            return val.join( delimiter );\n        };\n    }\n\n    public static ifEmpty ( emptyValue: any ): IFormatter {\n        return function (val: any, data: object ) {\n            return val === '' ?\n                emptyValue :\n                val;\n        };\n    }\n\n    public static fromDecimalChar ( char: string=',' ): IFormatter {\n        return function (val: any, data: object ) {\n            return val.replace( char, '.' );\n        };\n    }\n\n    public static toDecimalChar ( char: string=',' ): IFormatter {\n        return function (val: any, data: object ) {\n            return val.replace( '.', char );\n        };\n    }\n}"]}